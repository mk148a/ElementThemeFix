<div class="desktop-nav-wrapper">
    <div class="menu-title-wrapper">
        <div class="personal-button">
            <span>@T("SevenSpikes.Themes.Common.Personal")</span>
        </div>
    </div>
    @{
        await Html.RenderPartialAsync("_Header");
    }
    <div class="responsive-nav-wrapper-parent">
        <div class="responsive-nav-wrapper">
            <div class="menu-title">
                <span>@T("SevenSpikes.Themes.Common.MenuTitle")</span>
            </div>
            <div class="search-wrap">
                <span>@T("Search")</span>
            </div>
            <div class="personal-button">
                <span>@T("SevenSpikes.Themes.Common.Personal")</span>
            </div>
            @if (ViewBag.WishlistEnabled != null && ViewBag.WishlistEnabled)
            {
                <div class="wishlist-opener">
                    <a href="@Url.RouteUrl("Wishlist")" title="@T("Wishlist")"><small class="wishlist-qty">@T("Wishlist.HeaderQuantity", ViewBag.WishlistItems)</small></a>
                </div>
            }
            @if (ViewBag.ShoppingCartEnabled != null && ViewBag.ShoppingCartEnabled)
            {
                <div class="shopping-cart-link">
                    <a href="@Url.RouteUrl("ShoppingCart")" title="@T("ShoppingCart")"><small class="cart-qty">@T("ShoppingCart.HeaderQuantity", ViewBag.ShoppingCartItems)</small></a>
                </div>
            }
            <div class="filters-button">
                <span>@T("SevenSpikes.Themes.Common.Filters")</span>
            </div>
        </div>
    </div>
    <div class="header-menu">
        <div class="close-menu">
            <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
        </div>
        @{
            var menuHtml = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
        }
        @if (!String.IsNullOrEmpty(await menuHtml.RenderHtmlContentAsync()))
        {
            @menuHtml
        }
        else
        {
            @await Component.InvokeAsync("TopMenu")
        }
    </div>
</div>