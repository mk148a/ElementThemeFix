@model ForumPostModel
@using Nop.Core
@inject IWebHelper webHelper;
@{
    var thisPageUrl = webHelper.GetThisPageUrl(true);
}
<div class="topic-post" id="@Html.Encode($"post{Model.Id}")">
    <div class="post-info">
        <div class="user-info">
            @if (Model.AllowViewingProfiles)
            {
                @Html.RouteLink(Model.CustomerName, "CustomerProfile", new { id = Model.CustomerId }, new { @class = "username" })
            }
            else
            {
                <span class="username">@Model.CustomerName</span>
            }
            @if (!string.IsNullOrEmpty(Model.CustomerAvatarUrl))
            {
                <div class="avatar">
                    @if (Model.AllowViewingProfiles)
                    {
                        <a href="@Url.RouteUrl("CustomerProfile", new { id = Model.CustomerId })" class="avatar-img-link">
                            <img src="@(Model.CustomerAvatarUrl)" class="avatar-img" alt="Avatar" />
                        </a>
                    }
                    else
                    {
                        <img src="@(Model.CustomerAvatarUrl)" class="avatar-img" alt="Avatar" />
                    }
                </div>
            }
        </div>
        <ul class="user-stats">
            @if (Model.IsCustomerForumModerator)
            {
                <li class="status">
                    <label>@T("Forum.Status"):</label>
                    <span>@T("Forum.Moderator")</span>
                </li>
            }
            @if (Model.ShowCustomersPostCount)
            {
                <li class="total-posts">
                    <label>@T("Forum.TotalPosts"):</label>
                    <span>@Model.ForumPostCount</span>
                </li>
            }
            @if (Model.ShowCustomersJoinDate)
            {
                <li class="joined">
                    <label>@T("Forum.Joined"):</label>
                    <span>@Model.CustomerJoinDate.ToString("d")</span>
                </li>
            }
            @if (Model.ShowCustomersLocation && !string.IsNullOrEmpty(Model.CustomerLocation))
            {
                <li class="location">
                    <label>@T("Forum.Location"):</label>
                    <span>@Model.CustomerLocation</span>
                </li>
            }
        </ul>
        @if (Model.AllowPrivateMessages)
        {
            <div class="send-pm">
                <a class="pm-button" href="@Url.RouteUrl("SendPM", new { toCustomerId = Model.CustomerId })"><span>@T("Forum.PrivateMessages.PM")</span></a>
            </div>
        }
    </div>
    <div class="post-content">
        <div class="post-head">
            <div class="post-time">
                <label>@T("Forum.Posted"):</label>
                <span class="stat-value">@Model.PostCreatedOnStr</span>
            </div>
            <div class="post-actions">
                <div class="manage-post">
                    @if (Model.IsCurrentCustomerAllowedToEditPost)
                    {
                        <a class="edit-post-button" href="@Url.RouteUrl("PostEdit", new { id = Model.Id })"><span>@T("Forum.EditPost")</span></a>
                    }
                    @if (Model.IsCurrentCustomerAllowedToDeletePost)
                    {
                        <a class="delete-post-button" onclick="return confirm('@T("Common.AreYouSure")');" href="@Url.RouteUrl("PostDelete", new { id = Model.Id })"><span>@T("Forum.DeletePost")</span></a>
                    }
                </div>
                <div class="quote-post">
                    <a id="@Model.Id" title="@T("Forum.PostLinkTitle")" class="post-link-button" href="@(thisPageUrl)#@(Model.Id)">#@(Model.Id)</a>
                    <a class="quote-post-button" href="@Url.RouteUrl("PostCreateQuote", new { id = Model.ForumTopicId, quote = Model.Id })"><span>@T("Forum.QuotePost")</span></a>
                </div>
            </div>
        </div>
        <div class="post-body">
            <div class="post-text">
                @Html.Raw(Model.FormattedText)
            </div>
            @if (Model.AllowPostVoting)
            {
                <script asp-location="Footer">
                    $(document).ready(function () {
                        var post = '#post-vote-' + @Model.Id;
                        $(post + ' span.vote').on('click', function () {
                            var postData = {
                                postId: @Model.Id,
                                IsUp: $(this).hasClass('up')
                            };
                            addAntiForgeryToken(postData);
                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@Url.Action("PostVote", "Boards")",
                                data: postData,
                                success: function (data, textStatus, jqXHR) {
                                    if (data.Error) {
                                        alert(data.Error);
                                    }
                                    else {
                                        $(post + ' div.vote-count-post').html(data.VoteCount);
                                        $(post + ' span.up').removeClass('selected');
                                        $(post + ' span.down').removeClass('selected');
                                        if (data.IsUp) {
                                            $(post + ' span.up').addClass('selected');
                                        }
                                        if (data.IsUp == false) {
                                            $(post + ' span.down').addClass('selected');
                                        }
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert('Failed to vote');
                                }
                            });
                        });
                    });
                </script>

                <div class="post-vote" id="@($"post-vote-{Model.Id}")">
                    <span class="vote down @if (Model.VoteIsUp.HasValue && (bool)!Model.VoteIsUp) { <text>selected</text> }"
                          title="@T("Forum.Post.IsNotUseful")"></span>
                    <strong class="vote-count-post"> @Model.VoteCount </strong>
                    <span class="vote up @if (Model.VoteIsUp.HasValue && (bool) Model.VoteIsUp){<text>selected</text>}"
                          title="@T("Forum.Post.IsUseful")"></span>
                </div>
            }
            @if (Model.SignaturesEnabled & !string.IsNullOrEmpty(Model.FormattedSignature))
            {
                <div class="signature">
                    @Html.Raw(Model.FormattedSignature)
                </div>
            }
        </div>
    </div>
</div>
